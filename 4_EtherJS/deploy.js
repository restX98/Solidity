const ethers = require("ethers");
const fs = require("fs-extra");

async function main() {
  // Connessione alla blockchain locale creata con Ganache
  const provider = new ethers.providers.JsonRpcProvider(
    "http://172.27.160.1:7545"
  );
  const wallet = new ethers.Wallet(
    "26bcdae668ff12ba5a72dc2cfc9a49beb9b8b57c0cca2c1519e6f5636b5bc728",
    provider
  );

  const abi = fs.readFileSync("./SimpleStorage_sol_SimpleStorage.abi", "utf8");
  const binary = fs.readFileSync(
    "./SimpleStorage_sol_SimpleStorage.bin",
    "utf8"
  );

  const contractFactory = new ethers.ContractFactory(abi, binary, wallet);
  console.log("Deploying, please wait...");
  const contract = await contractFactory.deploy(/* {gasPrice: 1000000000} */);
  // console.log("Contract:", contract, "\n\n\n");

  /* Aspettiamo che la transazione abbia almeno 1 conferma */
  const transactionReceipt = await contract.deployTransaction.wait(1);

  /* La reale transazione che ha creato lo Smart Contract*/
  // console.log("Deployment transaction:", contract.deployTransaction, "\n\n\n");
  /* La ricevuta che ci conferma che la transazione è stata confermata almeno una volta.
   * Confermare una transazione significa che almeno un altro nodo ha validato la
   * nostra transazione
   */
  // console.log("Transaction Receipt:", transactionReceipt, "\n\n\n");

  /* Otteniamo il numero salvato nello stato dello Smart Contract */
  let myNumber = await contract.retrieve();
  /* EtherJS di base lavora con il tipo BitNumber in quanto lavorando con i tipi
   * numerici di jacascript si otterrebbe uno scarto troppo elevato
   */
  // console.log("My Number: ", myNumber); // BigNumber { _hex: '0x00', _isBigNumber: true }
  console.log("My Number: ", myNumber.toString());

  let storeTxResponse = await contract.store("10");
  let storeTxReceipt = await storeTxResponse.wait(1);
  myNumber = await contract.retrieve();
  console.log("My Updated Number: ", myNumber.toString());
}

async function rawTransactionFunction() {
  const provider = new ethers.providers.JsonRpcProvider(
    "http://172.27.160.1:7545"
  );
  const wallet = new ethers.Wallet(
    "26bcdae668ff12ba5a72dc2cfc9a49beb9b8b57c0cca2c1519e6f5636b5bc728",
    provider
  );

  let nonce = await wallet.getTransactionCount();
  let tx = {
    nonce: nonce, // Count delle transazioni del wallet
    gasPrice: 20000000000, // Prezzo di ogni unità di gas in WEI
    gasLimit: 6721975, // Massima unità di gas utilizzabile
    to: null, // Per deployare un contratto non dobbiamo inviare la transazione a nessuno
    value: 0, // Unità della valuta da inviare
    // Binary file dello Smart Contract
    data: "0x60806040526040518060400160405280600781526020016040518060400160405280600681526020017f456e7269636f00000000000000000000000000000000000000000000000000008152508152506001600082015181600001556020820151816001019080519060200190610077929190610102565b5050506040518060400160405280600781526020016040518060400160405280600681526020017f456e7269636f000000000000000000000000000000000000000000000000000081525081525060036000820151816000015560208201518160010190805190602001906100ed929190610102565b5050503480156100fc57600080fd5b50610206565b82805461010e906101a5565b90600052602060002090601f0160209004810192826101305760008555610177565b82601f1061014957805160ff1916838001178555610177565b82800160010185558215610177579182015b8281111561017657825182559160200191906001019061015b565b5b5090506101849190610188565b5090565b5b808211156101a1576000816000905550600101610189565b5090565b600060028204905060018216806101bd57607f821691505b602082108114156101d1576101d06101d7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6107e2806102156000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636f760f411161005b5780636f760f41146100ec5780639e7a13ad14610108578063a6b7fc5b14610139578063f2c0a786146101575761007d565b806323fd0e40146100825780632fae4ffd146100a05780636057361d146100d0575b600080fd5b61008a610175565b604051610097919061059b565b60405180910390f35b6100ba60048036038101906100b59190610439565b61017b565b6040516100c7919061059b565b60405180910390f35b6100ea60048036038101906100e591906104de565b6101a9565b005b61010660048036038101906101019190610482565b6101b3565b005b610122600480360381019061011d91906104de565b610243565b6040516101309291906105b6565b60405180910390f35b6101416102ff565b60405161014e919061059b565b60405180910390f35b61015f610308565b60405161016c919061059b565b60405180910390f35b60005481565b6006818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b8060008190555050565b60056040518060400160405280838152602001848152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001019080519060200190610219929190610311565b5050508060068360405161022d9190610584565b9081526020016040518091039020819055505050565b6005818154811061025357600080fd5b906000526020600020906002020160009150905080600001549080600101805461027c906106af565b80601f01602080910402602001604051908101604052809291908181526020018280546102a8906106af565b80156102f55780601f106102ca576101008083540402835291602001916102f5565b820191906000526020600020905b8154815290600101906020018083116102d857829003601f168201915b5050505050905082565b60008054905090565b60006003905090565b82805461031d906106af565b90600052602060002090601f01602090048101928261033f5760008555610386565b82601f1061035857805160ff1916838001178555610386565b82800160010185558215610386579182015b8281111561038557825182559160200191906001019061036a565b5b5090506103939190610397565b5090565b5b808211156103b0576000816000905550600101610398565b5090565b60006103c76103c28461060b565b6105e6565b9050828152602081018484840111156103e3576103e2610775565b5b6103ee84828561066d565b509392505050565b600082601f83011261040b5761040a610770565b5b813561041b8482602086016103b4565b91505092915050565b60008135905061043381610795565b92915050565b60006020828403121561044f5761044e61077f565b5b600082013567ffffffffffffffff81111561046d5761046c61077a565b5b610479848285016103f6565b91505092915050565b600080604083850312156104995761049861077f565b5b600083013567ffffffffffffffff8111156104b7576104b661077a565b5b6104c3858286016103f6565b92505060206104d485828601610424565b9150509250929050565b6000602082840312156104f4576104f361077f565b5b600061050284828501610424565b91505092915050565b60006105168261063c565b6105208185610647565b935061053081856020860161067c565b61053981610784565b840191505092915050565b600061054f8261063c565b6105598185610658565b935061056981856020860161067c565b80840191505092915050565b61057e81610663565b82525050565b60006105908284610544565b915081905092915050565b60006020820190506105b06000830184610575565b92915050565b60006040820190506105cb6000830185610575565b81810360208301526105dd818461050b565b90509392505050565b60006105f0610601565b90506105fc82826106e1565b919050565b6000604051905090565b600067ffffffffffffffff82111561062657610625610741565b5b61062f82610784565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000819050919050565b82818337600083830152505050565b60005b8381101561069a57808201518184015260208101905061067f565b838111156106a9576000848401525b50505050565b600060028204905060018216806106c757607f821691505b602082108114156106db576106da610712565b5b50919050565b6106ea82610784565b810181811067ffffffffffffffff8211171561070957610708610741565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61079e81610663565b81146107a957600080fd5b5056fea26469706673582212209b71d523bb74fa09c4370811c9f2902da98232faacb477bc8cce570ff4c22c5a64736f6c63430008070033",
    chainId: 1337,
  };

  const signedTx = await wallet.signTransaction(tx);
  console.log("Signed Transaction:\n", signedTx, "\n\n\n");

  // Firma automaticamente la transazione prima di inviarla
  const sentTx = await wallet.sendTransaction(tx);
  await sentTx.wait(1);
  console.log("Sent Transaction:", sentTx, "\n\n");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.log(error);
    process.exit(0);
  });
